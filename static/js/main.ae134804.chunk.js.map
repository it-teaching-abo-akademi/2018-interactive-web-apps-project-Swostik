{"version":3,"sources":["components/Modal.js","components/Portfolio.js","components/Page.js","components/App.js","index.js"],"names":["Modal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","stockname","data","minDateAvailable","maxDateAvailable","firstDate","secondDate","event","setState","target","value","show","client","XMLHttpRequest","that","open","onreadystatechange","readyState","t","obj","JSON","parse","responseText","count","temp","date","res","val","push","buildData","send","v","d","length","f","s","i","defineProperty","name","parseFloat","getData","_this2","react_default","a","createElement","className","style","position","top","bottom","left","right","backgroundColor","padding","borderRadius","maxWidth","minHeight","margin","type","onChange","handleChangeF","bind","min","max","handleChangeS","onClick","LineChart","width","height","XAxis","dataKey","YAxis","CartesianGrid","strokeDasharray","Tooltip","Legend","Line","stroke","activeDot","r","onClose","React","Component","Portfolio","id","total","currency","stocklist","countP","pname","pquantity","currencyValue","curr","n","q","b","array","tot","addStock","pf","localStorage","p","ns","qs","stringify","newArray","Portfolio_Stock","key","idStock","quantity","totalvalue","selected","selectStock","updateC","y","getTotal","c","idq","func","j","addf","splice","m","funcs","counter","getCurrencyValue","add","newV","newTotal","_this3","placeholder","handleChangeN","handleChangeQ","changeToEuro","changeToDollar","refresh","removeSelected","Stock","_this4","toggleModal","isOpen","_this5","align","checked","components_Modal","Page","portList","a1","components_Portfolio","delPortFolio","co","addPortFolio","handleChange","slice","map","portfolio","App","components_Page","ReactDOM","render","components_App","document","querySelector"],"mappings":"4RAuKeA,qBAhKb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,UAAW,KACXC,KAAM,GACNC,iBAAkB,KAClBC,iBAAkB,KAClBC,UAAW,GACXC,WAAY,IARGb,6EAaLc,GACZX,KAAKY,SAAS,CAACH,UAAWE,EAAME,OAAOC,8CAI3BH,GACZX,KAAKY,SAAS,CAACF,WAAYC,EAAME,OAAOC,0CAKxCd,KAAKY,SAAS,CAACG,MAAK,IACpB,IAAIC,EAAS,IAAIC,eACbC,EAAOlB,KAEXgB,EAAOG,KAAK,MAAO,uEAAyEnB,KAAKJ,MAAMS,UAAY,4BAA4B,GAC/IW,EAAOI,mBAAqB,WAC1B,GAAyB,IAAtBJ,EAAOK,WAAkB,CAC1B,IAEIC,EAFAC,EAAMC,KAAKC,MAAMT,EAAOU,cACxBC,EAAQ,EAEZ,IAAKL,KAAKC,EAAI,CACZ,GAAc,IAAVI,EACF,IAAIC,EAAOL,EAAID,GAEjBK,IAEFA,EAAQ,EAER,IAAIE,EAAO,GACPC,EAAM,GACV,IAAKR,KAAKM,EAAK,CACX,IAAMG,EAAMH,EAAKN,GAAG,YACpBQ,EAAIE,KAAKD,GACTF,EAAKG,KAAKV,GACZK,IAEFA,EAAO,EACPT,EAAKe,UAAUH,EAAID,KAGvBb,EAAOkB,yCAKCC,EAAEC,GACV,IAAIN,EAAM,GACV9B,KAAKY,SAAS,CAACL,iBAAiB6B,EAAEA,EAAEC,OAAO,KAC3CrC,KAAKY,SAAS,CAACJ,iBAAiB4B,EAAE,KAElC,IAAIE,EAAIF,EAAEC,OAAO,EACbE,EAAI,EAER,GAA4B,OAAzBvC,KAAKI,MAAMK,WAAgD,OAA1BT,KAAKI,MAAMM,WAC7C,IAAK,IAAI8B,EAAIL,EAAEE,OAAO,EAAGG,GAAK,EAAGA,IAC5BJ,EAAEI,KAAOxC,KAAKI,MAAMK,YACrB6B,EAAIE,GAEHJ,EAAEI,KAAOxC,KAAKI,MAAMM,aACrB6B,EAAIC,GAIV,IAAKA,EAAIF,EAAGE,GAAKD,EAAGC,IAElBV,EAAIE,KAAJlC,OAAA2C,EAAA,EAAA3C,CAAA,CAAU4C,KAAMN,EAAEI,IAAKxC,KAAKJ,MAAMS,UAAWsC,WAAWR,EAAEK,MAG5DxC,KAAKY,SAAS,CAACN,KAAKwB,gDAIpB9B,KAAK4C,2CAGE,IAAAC,EAAA7C,KAEP,IAAIA,KAAKJ,MAAMmB,KACb,OAAO,KAyBT,OACE+B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWC,MAtBN,CACpBC,SAAU,QACVC,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,gBAAiB,kBACjBC,QAAS,KAgBPX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQC,MAZR,CACjBM,gBAAiB,OACjBE,aAAc,EACdC,SAAU,KACVC,UAAW,IACXC,OAAQ,SACRJ,QAAS,KAQLX,EAAAC,EAAAC,cAAA,SAAOc,KAAK,OAAOpB,KAAK,OAAO5B,MAAOd,KAAKI,MAAMK,UAAWsD,SAAU/D,KAAKgE,cAAcC,KAAKjE,MAAOkE,IAAKlE,KAAKI,MAAMG,iBAAkB4D,IAAKnE,KAAKI,MAAMI,mBACvJsC,EAAAC,EAAAC,cAAA,SAAOc,KAAK,OAAOpB,KAAK,OAAO5B,MAAOd,KAAKI,MAAMM,WAAYqD,SAAU/D,KAAKoE,cAAcH,KAAKjE,MAAOkE,IAAKlE,KAAKI,MAAMG,iBAAkB4D,IAAKnE,KAAKI,MAAMI,mBAExJsC,EAAAC,EAAAC,cAAA,UAAQqB,QAAS,kBAAMxB,EAAKD,YAA5B,UACAE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAMAF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAWC,MAAO,IAAMC,OAAQ,IAAKlE,KAAMN,KAAKI,MAAME,KAChDuD,OAAQ,CAACT,IAAK,EAAGG,MAAO,GAAID,KAAM,GAAID,OAAQ,IAClDP,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAOC,QAAQ,SACf5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,MACA7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAeC,gBAAgB,QAC/B/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,MACAhC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,MACAjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAMlB,KAAK,WAAWY,QAAS1E,KAAKJ,MAAMS,UAAW4E,OAAO,UAAUC,UAAW,CAACC,EAAG,MAGvFrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,KAAKoB,QAASrE,KAAKJ,MAAMwF,SAA3C,mBAhJQC,IAAMC,YCHpBC,cACJ,SAAAA,EAAY3F,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuF,IACjB1F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyF,GAAApF,KAAAH,KAAMJ,KACDQ,MAAQ,CACXoF,GAAG,KACH9C,KAAM,KACN+C,MAAO,EACPC,SAAU,IACVC,UAAW,GACXC,OAAQ,EACRC,MAAO,GACPC,UAAW,GACX/E,MAAM,EACNgF,cAAe,MAZAlG,kFAkBjB,IAAIqB,EAAOlB,KACPgB,EAAS,IAAIC,eACjBD,EAAOG,KAAK,MAAO,+HAA+H,GAClJH,EAAOI,mBAAqB,WAC1B,GAAyB,IAAtBJ,EAAOK,WAAkB,CAC1B,IACI2E,EADMxE,KAAKC,MAAMT,EAAOU,cACb,mCAAmC,oBAClDR,EAAKN,SAAS,CAACmF,cAAcC,MAGjChF,EAAOkB,mCAKL+D,EAAEC,EAAEnD,EAAEoD,GACRnG,KAAKY,SAAS,CAACG,MAAK,IACpB,IAAIG,EAAOlB,KACPoG,EAAQrD,EACR/B,EAAS,IAAIC,eACjBD,EAAOG,KAAK,MAAO,0EAA4E8E,EAAG,0CAA0C,GAC5IjF,EAAOI,mBAAqB,WAC1B,GAAyB,IAAtBJ,EAAOK,WAAkB,CAC1B,IAEIC,EAFAC,EAAMC,KAAKC,MAAMT,EAAOU,cACxBC,EAAQ,EAEZ,IAAKL,KAAKC,EAAI,CACZ,GAAc,IAAVI,EACF,IAAIC,EAAOL,EAAID,GAEjBK,IAIF,IAAKL,KAFLK,EAAQ,EAEEC,EAAK,CACb,GAAa,IAAVD,EAAY,CACb,IAAMI,EAAMH,EAAKN,GAAG,YACd+E,EAAMtE,EAAMmE,EAIlB,GAHAhF,EAAKoF,SAASL,EAAEC,EAAEnE,EAAIsE,EAAID,GAGvBD,EAAE,CACH,IAAII,EAAK/E,KAAKC,MAAM+E,aAAY,IAChC,IAAK,IAAIC,KAAKF,EACZ,GAAGA,EAAGE,GAAGjE,IAAMtB,EAAKtB,MAAM4F,GAAG,CAC3B,IAAIkB,EAAKT,EACLU,EAAKT,EACTK,EAAGE,GAAGlE,EAAEP,KAAK,CAAC0E,KAAGC,OAGrBH,aAAY,GAAShF,KAAKoF,UAAUL,IAIvC5E,IAEHA,EAAO,IAGXX,EAAOkB,wCAIA+D,EAAEC,EAAE/D,EAAEb,EAAEyB,GAAE,IAAAF,EAAA7C,KACb6G,EAAW9D,EACY,WAAxB/C,KAAKI,MAAMsF,WAEZpE,GADAa,GAAQnC,KAAKI,MAAM2F,eACXG,GAEV,IAAI5D,EAAItC,KAAKI,MAAMwF,OACnBiB,EAAS7E,KAAKc,EAAAC,EAAAC,cAAC8D,EAAD,CAAOC,IAAK/G,KAAKI,MAAMwF,OAAQoB,QAAShH,KAAKI,MAAMwF,OAAQlD,KAAMuD,EAAGgB,SAAUf,EAAGpF,MAAOqB,EAAG+E,WAAY5F,EAAG6F,UAAU,EAAOpD,SAAU,kBAAMlB,EAAKuE,YAAY9E,OAC1KtC,KAAKqH,UACLrH,KAAKY,SAAS,CAAC+E,UAAUkB,GAAW,WAClC,IACMS,EADEtH,KAAKI,MAAMwF,OACN,EACb5F,KAAKY,SAAS,CAACgF,OAAO0B,IACtBtH,KAAKuH,0CAOJxE,EAAEyE,EAAEvB,EAAEC,EAAE/D,EAAEb,EAAEiB,EAAErB,GACjB,OAAO,WACL6B,EAAEf,KAAKc,EAAAC,EAAAC,cAAC8D,EAAD,CAAOC,IAAKS,EAAGR,QAASQ,EAAG9E,KAAMuD,EAAGgB,SAAUf,EAAGpF,MAAOqB,EAAG+E,WAAY5F,EAAG6F,SAAU5E,EAAGwB,SAAU,kBAAM7C,EAAKkG,YAAYI,4CAKvHC,GAIV,IAHA,IAAIC,EAEAC,EADAd,EAAW7G,KAAKI,MAAMuF,UAEjBnD,EAAI,EAAGA,EAAIxC,KAAKI,MAAMuF,UAAUtD,OAAQG,IAC5CxC,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAMoH,UAAYS,IAE3CC,EAAO1H,KAAK4H,KAAKf,EAAS7G,KAAKI,MAAMwF,OAAO5F,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAM8C,KAAK1C,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAMqH,SAASjH,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAMkB,MAAMd,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAMsH,YAAYlH,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAMuH,SAASnH,MAC3O2H,EAAEnF,GAGNkF,IACAb,EAASgB,OAAOF,EAAE,GAClB3H,KAAKY,SAAS,CAAC+E,UAAUkB,IACzB,IACMS,EADEtH,KAAKI,MAAMwF,OACN,EACb5F,KAAKY,SAAS,CAACgF,OAAO0B,IACtBtH,KAAKuH,WAEL,IADA,IAAIhB,EAAK/E,KAAKC,MAAM+E,aAAY,IACvBsB,EAAI,EAAGA,EAAIvB,EAAGlE,OAAQyF,IAC1BvB,EAAGuB,GAAGtF,IAAMxC,KAAKJ,MAAM4F,IACxBe,EAAGuB,GAAGN,IAGVhB,aAAY,GAAShF,KAAKoF,UAAUL,yCAIxB5F,GACZX,KAAKY,SAAS,CAACiF,MAAOlF,EAAME,OAAOC,8CAGvBH,GACZX,KAAKY,SAAS,CAACkF,UAAWnF,EAAME,OAAOC,iDAQvC,IAHA,IAAIiH,EAAO,GACPlB,EAAW,GACXmB,EAAUhI,KAAKI,MAAMwF,OAChBpD,EAAI,EAAGA,EAAIxC,KAAKI,MAAMuF,UAAUtD,OAAQG,IAAK,CACpD,GAAIxC,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAMuH,SAG7B,CAEH,IADA,IAAIZ,EAAK/E,KAAKC,MAAM+E,aAAY,IACvBsB,EAAI,EAAGA,EAAIvB,EAAGlE,OAAQyF,IAC7B,GAAGvB,EAAGuB,GAAGtF,IAAMxC,KAAKJ,MAAM4F,GACxB,IAAI,IAAIlE,EAAI,EAAGA,EAAIiF,EAAGuB,GAAGvF,EAAEF,OAAQf,IAC9BiF,EAAGuB,GAAGvF,EAAEjB,GAAGoF,KAAO1G,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAM8C,MAAQ6D,EAAGuB,GAAGvF,EAAEjB,GAAGqF,KAAO3G,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAMqH,UAEzGV,EAAGuB,GAAGvF,EAAEsF,OAAOvG,EAAE,GAKzBkF,aAAY,GAAShF,KAAKoF,UAAUL,QAbpCwB,EAAM/F,KAAKhC,KAAK4H,KAAKf,EAASmB,EAAQhI,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAM8C,KAAK1C,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAMqH,SAASjH,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAMkB,MAAMd,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAMsH,WAAWlH,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAMuH,SAASnH,OAetOgI,IAEF,IAAK,IAAIL,EAAI,EAAGA,EAAII,EAAM1F,OAAQsF,IAChCI,EAAMJ,KAER3H,KAAKqH,UACLrH,KAAKY,SAAS,CAAC+E,UAAUkB,GAAU,WACjC7G,KAAKY,SAAS,CAACgF,OAAOoC,IACtBhI,KAAKuH,+CAMPvH,KAAKiI,mBAEL,IADA,IAAIpB,EAAW,GACNrE,EAAI,EAAGA,EAAIxC,KAAKI,MAAMuF,UAAUtD,OAAQG,IAE/CxC,KAAKkI,IAAIlI,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAM8C,KAAK1C,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAMqH,SAASJ,GAAS,sCAO9F,IADA,IAAI/E,EAAI,EACCU,EAAI,EAAGA,EAAIxC,KAAKI,MAAMuF,UAAUtD,OAAQG,IAC/CV,GAAY9B,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAMsH,WAE5ClH,KAAKY,SAAS,CAAC6E,MAAM3D,2CAKrB,GAA2B,MAAxB9B,KAAKI,MAAMsF,SAAiB,CAC7B1F,KAAKY,SAAS,CAAC8E,SAAS,WAIxB,IAHA,IAAImB,EAAW,GACXkB,EAAO,GACPC,EAAUhI,KAAKI,MAAMwF,OAChBpD,EAAI,EAAGA,EAAIxC,KAAKI,MAAMuF,UAAUtD,OAAQG,IAAK,CACpD,IAAI2F,EAAOnI,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAMkB,MAAQd,KAAKI,MAAM2F,cACxDqC,EAAWD,EAAOnI,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAMqH,SACpDc,EAAM/F,KAAKhC,KAAK4H,KAAKf,EAASmB,EAAQhI,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAM8C,KAAK1C,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAMqH,SAASkB,EAAKC,EAASpI,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAMuH,SAASnH,OACrKgI,IAEF,IAAK,IAAI1G,EAAI,EAAGA,EAAIyG,EAAM1F,OAAQf,IAChCyG,EAAMzG,KAERtB,KAAKqH,UACLrH,KAAKY,SAAS,CAAC+E,UAAUkB,GAAU,WACjC7G,KAAKY,SAAS,CAACgF,OAAOoC,IACtBhI,KAAKuH,uDAOT,GAA2B,WAAxBvH,KAAKI,MAAMsF,SAAiB,CAC7B1F,KAAKY,SAAS,CAAC8E,SAAS,MAIxB,IAHA,IAAImB,EAAW,GACXkB,EAAO,GACPC,EAAUhI,KAAKI,MAAMwF,OAChBpD,EAAI,EAAGA,EAAIxC,KAAKI,MAAMuF,UAAUtD,OAAQG,IAAK,CACpD,IAAI2F,EAAOnI,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAMkB,MAAQd,KAAKI,MAAM2F,cACxDqC,EAAWD,EAAOnI,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAMqH,SACpDc,EAAM/F,KAAKhC,KAAK4H,KAAKf,EAASmB,EAAQhI,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAM8C,KAAK1C,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAMqH,SAASkB,EAAKC,EAASpI,KAAKI,MAAMuF,UAAUnD,GAAG5C,MAAMuH,SAASnH,OACrKgI,IAEF,IAAK,IAAI1G,EAAI,EAAGA,EAAIyG,EAAM1F,OAAQf,IAChCyG,EAAMzG,KAERtB,KAAKqH,UACLrH,KAAKY,SAAS,CAAC+E,UAAUkB,GAAU,WACjC7G,KAAKY,SAAS,CAACgF,OAAOoC,IACtBhI,KAAKuH,gDAOT,IADA,IAAIhB,EAAK/E,KAAKC,MAAM+E,aAAY,IACvBsB,EAAI,EAAGA,EAAIvB,EAAGlE,OAAQyF,IAC1BvB,EAAGuB,GAAGtF,IAAMxC,KAAKJ,MAAM4F,IACxBe,EAAGuB,GAAGN,IAGVhB,aAAY,GAAShF,KAAKoF,UAAUL,gDAKpC,IADA,IAAIA,EAAK/E,KAAKC,MAAM+E,aAAY,IACvBsB,EAAI,EAAGA,EAAIvB,EAAGlE,OAAQyF,IAC1BvB,EAAGuB,GAAGtF,IAAMxC,KAAKJ,MAAM4F,IAExBxF,KAAKY,SAAS,CAACgF,OAAOW,EAAGuB,GAAGN,IAGhChB,aAAY,GAAShF,KAAKoF,UAAUL,+CAIpCvG,KAAKiI,mBAGL,IADA,IAAI1B,EAAK/E,KAAKC,MAAM+E,aAAY,IACvBsB,EAAI,EAAGA,EAAIvB,EAAGlE,OAAQyF,IAC7B,GAAGvB,EAAGuB,GAAGtF,IAAMxC,KAAKJ,MAAM4F,GACxB,IAAI,IAAIlE,EAAI,EAAGA,EAAIiF,EAAGuB,GAAGvF,EAAEF,OAAQf,IAEjCtB,KAAKkI,IAAI3B,EAAGuB,GAAGvF,EAAEjB,GAAGoF,GAAGH,EAAGuB,GAAGvF,EAAEjB,GAAGqF,GAAG3G,KAAKI,MAAMuF,WAAU,GAIhEa,aAAY,GAAShF,KAAKoF,UAAUL,oCAI7B,IAAA8B,EAAArI,KACP,OACE8C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,WAAMhD,KAAKJ,MAAM8C,MAGhB1C,KAAKI,MAAMW,MACZ+B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOc,KAAK,OAAOwE,YAAY,aAAaxH,MAAOd,KAAKI,MAAMyF,MAAO9B,SAAU/D,KAAKuI,cAActE,KAAKjE,QACvG8C,EAAAC,EAAAC,cAAA,SAAOc,KAAK,OAAOwE,YAAY,WAAWxH,MAAOd,KAAKI,MAAM0F,UAAW/B,SAAU/D,KAAKwI,cAAcvE,KAAKjE,QACzG8C,EAAAC,EAAAC,cAAA,UAAQqB,QAAS,kBAAMgE,EAAKH,IAAIG,EAAKjI,MAAMyF,MAAMwC,EAAKjI,MAAM0F,UAAUuC,EAAKjI,MAAMuF,WAAU,KAA3F,aAIF7C,EAAAC,EAAAC,cAAA,UAAQqB,QAAS,kBAAMgE,EAAKI,iBAA5B,kBACA3F,EAAAC,EAAAC,cAAA,UAAQqB,QAAS,kBAAMgE,EAAKK,mBAA5B,aACA5F,EAAAC,EAAAC,cAAA,UAAQqB,QAAS,kBAAMgE,EAAKM,YAA5B,WAEA7F,EAAAC,EAAAC,cAAA,UAAQC,UAAU,KAAKoB,QAAS,kBAAMgE,EAAKzI,MAAMyE,QAAQgE,EAAKzI,MAAM4F,MAApE,KAEA1C,EAAAC,EAAAC,cAAA,SAAOuB,MAAQ,OACbzB,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,qBAGJF,EAAAC,EAAAC,cAAA,aACGhD,KAAKI,MAAMuF,YAGhB7C,EAAAC,EAAAC,cAAA,6BAAqBhD,KAAKJ,MAAM8C,KAAhC,MAAyC1C,KAAKI,MAAMqF,MAApD,IAA4DzF,KAAKI,MAAMsF,UACtE1F,KAAKI,MAAMuF,UAAUtD,OAAS,IAC/BS,EAAAC,EAAAC,cAAA,UAAQqB,QAAS,kBAAMgE,EAAKzH,SAAS,CAACG,MAAK,MAA3C,aACA+B,EAAAC,EAAAC,cAAA,UAAQqB,QAAS,kBAAMgE,EAAKO,mBAA5B,2BAlUgBvD,IAAMC,WAyUxBuD,cACJ,SAAAA,EAAYjJ,GAAO,IAAAkJ,EAAA,OAAAhJ,OAAAC,EAAA,EAAAD,CAAAE,KAAA6I,IACjBC,EAAAhJ,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+I,GAAA1I,KAAAH,KAAMJ,KAaRmJ,YAAc,WACZD,EAAKlI,SAAS,CACZoI,QAASF,EAAK1I,MAAM4I,UAdtBF,EAAK1I,MAAQ,CACX4G,QAAQ,KACRtE,KAAM,KACN5B,MAAO,EACPmG,SAAU,EACVC,WAAY,EACZC,UAAU,EACV6B,QAAQ,GATOF,wEAoBV,IAAAG,EAAAjJ,KACP,OACE8C,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIkG,MAAO,UAAUlJ,KAAKJ,MAAM8C,MAChCI,EAAAC,EAAAC,cAAA,MAAIkG,MAAO,UAAUlJ,KAAKJ,MAAMkB,OAChCgC,EAAAC,EAAAC,cAAA,MAAIkG,MAAO,UAAUlJ,KAAKJ,MAAMqH,UAChCnE,EAAAC,EAAAC,cAAA,MAAIkG,MAAO,UAAUlJ,KAAKJ,MAAMsH,YAEhCpE,EAAAC,EAAAC,cAAA,MAAIkG,MAAO,UAASpG,EAAAC,EAAAC,cAAA,SAAOc,KAAK,WAAWqF,QAASnJ,KAAKJ,MAAMuH,SAAUpD,SAAU,kBAAMkF,EAAKrJ,MAAMmE,SAASkF,EAAKrJ,MAAMoH,aACxHlE,EAAAC,EAAAC,cAAA,MAAIkG,MAAO,UAASpG,EAAAC,EAAAC,cAAA,UAAQqB,QAAS,kBAAM4E,EAAKF,gBAA5B,SAEpBjG,EAAAC,EAAAC,cAACoG,EAAD,CAAO/I,UAAWL,KAAKJ,MAAM8C,KAAM3B,KAAMf,KAAKI,MAAM4I,OAClD5D,QAASpF,KAAK+I,sBAjCJ1D,IAAMC,WAyCXC,IC7PA8D,cAlHb,SAAAA,EAAYzJ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqJ,IACjBxJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuJ,GAAAlJ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXkJ,SAAU,GACV3H,MAAO,EACPb,MAAO,GACPC,MAAM,GANSlB,4EAWNc,GACXX,KAAKY,SAAS,CAACE,MAAOH,EAAME,OAAOC,6CAIxBmF,EAAEzD,EAAE2D,GAAE,IAAAtD,EAAA7C,KACjB,GAAGmG,EAAE,CACH,GAAkC,qBAAvBK,aAAY,GACrB,IAAI+C,EAAK,QAETA,EAAK/H,KAAKC,MAAM+E,aAAY,IAE9B,IAEIC,EAAI,CAACjE,IAAEyD,IAAE1D,EAFL,GAEOiF,EADP,GAER+B,EAAGvH,KAAKyE,GACRD,aAAY,GAAShF,KAAKoF,UAAU2C,GACpC/C,aAAY,EAAQxG,KAAKI,MAAMuB,MAAQ,EAGzC,IAAIkF,EAAW7G,KAAKI,MAAMkJ,SAC1BzC,EAAS7E,KAAKc,EAAAC,EAAAC,cAACwG,EAAD,CAAWhE,GAAIhD,EAAGE,KAAMuD,EAAG5B,QAAS,kBAAMxB,EAAK4G,aAAajH,OAC1ExC,KAAKY,SAAS,CAAC0I,SAASzC,IACxB,IACMS,EADGtH,KAAKI,MAAMuB,MACN,EACd3B,KAAKY,SAAS,CAACe,MAAM2F,IACrBtH,KAAKY,SAAS,CAACG,MAAK,yCAKTyB,GAGX,IADA,IAAI+D,EAAK/E,KAAKC,MAAM+E,aAAY,IACvBlF,EAAI,EAAGA,EAAIiF,EAAGlE,OAAQf,IACzBiF,EAAGjF,GAAGkB,IAAMA,GACd+D,EAAGsB,OAAOvG,EAAE,GAGhBkF,aAAY,GAAShF,KAAKoF,UAAUL,GAIpC,IADA,IAAIM,EAAW7G,KAAKI,MAAMkJ,SACjB3B,EAAI,EAAGA,EAAId,EAASxE,OAAQsF,IAChCd,EAASc,GAAG/H,MAAM4F,KAAOhD,GAC1BqE,EAASgB,OAAOF,EAAE,GAGtB3H,KAAKY,SAAS,CAAC0I,SAASzC,iDAGxB,GAAGL,aAAY,EAAM,CACnB,IAAIkD,EAAKlI,KAAKC,MAAM+E,aAAY,GAChCxG,KAAKY,SAAS,CAACe,MAAM+H,iDAKvB,GAAGlD,aAAY,IAAUA,aAAY,EAAM,CACzC,IAAID,EAAK/E,KAAKC,MAAM+E,aAAY,IAEhC,IAAK,IAAIC,KAAKF,EAEZvG,KAAK2J,aAAapD,EAAGE,GAAGR,EAAEM,EAAGE,GAAGjE,GAAE,qCAM/B,IAAA6F,EAAArI,KACP,OACE8C,EAAAC,EAAAC,cAAA,WAEGhD,KAAKI,MAAMkJ,SAASjH,OAAS,IAC9BS,EAAAC,EAAAC,cAAA,UAAQqB,QAAS,kBAAMgE,EAAKzH,SAAS,CAACG,MAAK,MAA3C,qBAECf,KAAKI,MAAMW,MACV+B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOc,KAAK,OAAOwE,YAAY,iBAAiBxH,MAAOd,KAAKI,MAAMU,MAAOiD,SAAU/D,KAAK4J,aAAa3F,KAAKjE,QAC1G8C,EAAAC,EAAAC,cAAA,UAAQqB,QAAS,kBAAMgE,EAAKsB,aAAatB,EAAKjI,MAAMU,MAAMuH,EAAKjI,MAAMuB,OAAM,KAA3E,aAIJmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACZjD,KAAKI,MAAMkJ,SAASO,MAAM,EAAE,GAAGC,IAAI,SAAAC,GAAS,OAAIjH,EAAAC,EAAAC,cAAA,OAAK+D,IAAKgD,EAAUnK,MAAM4F,IAA1B,IAAgCuE,EAAhC,QAEnDjH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACZjD,KAAKI,MAAMkJ,SAASO,MAAM,EAAE,GAAGC,IAAI,SAAAC,GAAS,OAAIjH,EAAAC,EAAAC,cAAA,OAAK+D,IAAKgD,EAAUnK,MAAM4F,IAA1B,IAAgCuE,EAAhC,QAEnDjH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACZjD,KAAKI,MAAMkJ,SAASO,MAAM,EAAE,GAAGC,IAAI,SAAAC,GAAS,OAAIjH,EAAAC,EAAAC,cAAA,OAAK+D,IAAKgD,EAAUnK,MAAM4F,IAA1B,IAAgCuE,EAAhC,QAEnDjH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACZjD,KAAKI,MAAMkJ,SAASO,MAAM,GAAGC,IAAI,SAAAC,GAAS,OAAIjH,EAAAC,EAAAC,cAAA,OAAK+D,IAAKgD,EAAUnK,MAAM4F,IAA1B,IAAgCuE,EAAhC,gBA5GtC1E,IAAMC,WCUV0E,mLATX,OAEElH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiH,EAAD,cALU5E,IAAMC,WCCxB4E,IAASC,OAAOrH,EAAAC,EAAAC,cAACoH,EAAD,MAASC,SAASC,cAAc","file":"static/js/main.ae134804.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\nimport './index.css';\r\n\r\n\r\nclass Modal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stockname: null,\r\n      data: [], //data to feed the graph\r\n      minDateAvailable: null, //oldest date available\r\n      maxDateAvailable: null, //newest date available\r\n      firstDate: '', //first selected date\r\n      secondDate: '', //second selected date\r\n    };\r\n  }\r\n\r\n  //handle input first date\r\n  handleChangeF(event) {\r\n    this.setState({firstDate: event.target.value});\r\n  }\r\n\r\n  //handle input second date\r\n  handleChangeS(event) {\r\n    this.setState({secondDate: event.target.value});\r\n  }\r\n\r\n  //get daily data value of the stock\r\n  getData() {\r\n    this.setState({show:false})\r\n    var client = new XMLHttpRequest();\r\n    var that = this\r\n\r\n    client.open(\"GET\", \"https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=\" + this.props.stockname + \"&apikey=AABZ5Q20J049KTFZ\", true);\r\n    client.onreadystatechange = function() {\r\n      if(client.readyState === 4) {\r\n        var obj = JSON.parse(client.responseText)\r\n        var count = 0\r\n        var t\r\n        for (t in obj){\r\n          if (count === 1) {\r\n            var temp = obj[t]\r\n          }\r\n          count++\r\n        }\r\n        count = 0\r\n\r\n        var date = [] //date array\r\n        var res = []  //value array\r\n        for (t in temp){\r\n            const val = temp[t][\"4. close\"]\r\n            res.push(val)\r\n            date.push(t)\r\n          count++\r\n        }\r\n        count =0\r\n        that.buildData(res,date)\r\n      };\r\n    };\r\n    client.send();\r\n  }\r\n\r\n  //build data to feed the graph\r\n  //v:values array d:dates array\r\n  buildData(v,d){\r\n    var res = []\r\n    this.setState({minDateAvailable:d[d.length-1]}) //last date of the dates array\r\n    this.setState({maxDateAvailable:d[0]}) //first date of the dates array\r\n\r\n    var f = d.length-1\r\n    var s = 0\r\n\r\n    if(this.state.firstDate !== null && this.state.secondDate !== null){ //if input date are correct\r\n      for (var i = v.length-1; i >= 0; i--) {\r\n        if(d[i] === this.state.firstDate){\r\n          f = i //first date index\r\n        }\r\n        if(d[i] === this.state.secondDate){\r\n          s = i //second date index\r\n        }\r\n      }\r\n    }\r\n    for (i = f; i >= s; i--) {\r\n      //push (date,value) in res array\r\n      res.push({name: d[i], [this.props.stockname]:parseFloat(v[i])})\r\n    }\r\n\r\n    this.setState({data:res})\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getData()\r\n  }\r\n\r\n  render() {\r\n    // Render nothing if the \"show\" prop is false\r\n    if(!this.props.show) {\r\n      return null;\r\n    }\r\n\r\n    // The gray background\r\n    const backdropStyle = {\r\n      position: 'fixed',\r\n      top: 0,\r\n      bottom: 0,\r\n      left: 0,\r\n      right: 0,\r\n      backgroundColor: 'rgba(0,0,0,0.3)',\r\n      padding: 50\r\n    };\r\n\r\n    // The modal \"window\"\r\n    const modalStyle = {\r\n      backgroundColor: '#fff',\r\n      borderRadius: 5,\r\n      maxWidth: 1500,\r\n      minHeight: 600,\r\n      margin: '0 auto',\r\n      padding: 30\r\n    };\r\n\r\n\r\n    return (\r\n      <div className=\"backdrop\" style={backdropStyle}>\r\n        <div className=\"modal\" style={modalStyle}>\r\n\r\n          <input type=\"date\" name=\"bday\" value={this.state.firstDate} onChange={this.handleChangeF.bind(this)} min={this.state.minDateAvailable} max={this.state.maxDateAvailable}/>\r\n          <input type=\"date\" name=\"bday\" value={this.state.secondDate} onChange={this.handleChangeS.bind(this)} min={this.state.minDateAvailable} max={this.state.maxDateAvailable}/>\r\n\r\n          <button onClick={() => this.getData()}> Plot </button>\r\n          <br/>\r\n          <br/>\r\n\r\n          {/* LineChaart with custom properties\r\n              XAxis : dates\r\n              YAxis : values\r\n           */}\r\n          <LineChart width={1000} height={400} data={this.state.data}\r\n                margin={{top: 5, right: 20, left: 20, bottom: 5}}>\r\n            <XAxis dataKey=\"name\"/>\r\n            <YAxis/>\r\n            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n            <Tooltip/>\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey={this.props.stockname} stroke=\"#8884d8\" activeDot={{r: 8}}/>\r\n          </LineChart>\r\n\r\n          <div className=\"footer\">\r\n            <button className=\"cl\" onClick={this.props.onClose}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  show: PropTypes.bool,\r\n};\r\n\r\n\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport Modal from './Modal';\r\n\r\nclass Portfolio extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id:null, //id of the portfolio\r\n      name: null, //name\r\n      total: 0, //total amount of money in the portfolio\r\n      currency: \"$\", //current currency displayed\r\n      stocklist: [], //list of stocks\r\n      countP: 0, //local counter that ensures stock unique key\r\n      pname: '', //input text for the input stock name\r\n      pquantity: '', //input text for the input stock quantity\r\n      show: false, //boolean to show or not the input stock name and quantity\r\n      currencyValue: null, //current currency change from $ to €\r\n    };\r\n  }\r\n\r\n  //https request to get the latest currency change\r\n  getCurrencyValue(){\r\n    var that = this\r\n    var client = new XMLHttpRequest();\r\n    client.open(\"GET\", \"https://www.alphavantage.co/query?function=CURRENCY_EXCHANGE_RATE&from_currency=USD&to_currency=EUR&apikey=AABZ5Q20J049KTFZ\", true);\r\n    client.onreadystatechange = function() {\r\n      if(client.readyState === 4) {\r\n        var obj = JSON.parse(client.responseText);\r\n        var curr = obj[\"Realtime Currency Exchange Rate\"][\"5. Exchange Rate\"]\r\n        that.setState({currencyValue:curr})\r\n      };\r\n    };\r\n    client.send();\r\n  }\r\n\r\n  //http request to add a stock thanks to its n:name/symbol.\r\n  //get the current value in $ and calculate the total value thanks to its q:quantity\r\n  add(n,q,a,b){\r\n    this.setState({show:false})\r\n    var that = this\r\n    var array = a\r\n    var client = new XMLHttpRequest();\r\n    client.open(\"GET\", \"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=\" + n +\"&interval=1min&apikey=3ZO09J9XDN23K52H\", true);\r\n    client.onreadystatechange = function() {\r\n      if(client.readyState === 4) {\r\n        var obj = JSON.parse(client.responseText)\r\n        var count = 0\r\n        var t\r\n        for (t in obj){\r\n          if (count === 1) {\r\n            var temp = obj[t]\r\n          }\r\n          count++\r\n        }\r\n        count = 0\r\n\r\n        for (t in temp){\r\n          if(count === 0){\r\n            const val = temp[t][\"4. close\"]\r\n            const tot = val * q\r\n            that.addStock(n,q,val,tot,array)\r\n\r\n\r\n            if(b){ //add the stock to the corresponding pf in the local storage\r\n              var pf = JSON.parse(localStorage[\"pf\"]);\r\n              for( var p in pf){\r\n                if(pf[p].i === that.props.id){\r\n                  var ns = n\r\n                  var qs = q\r\n                  pf[p].s.push({ns,qs})\r\n                }\r\n              }\r\n              localStorage[\"pf\"] = JSON.stringify(pf);\r\n            }\r\n\r\n\r\n          }count++\r\n        }\r\n        count =0\r\n      };\r\n    };\r\n    client.send();\r\n  }\r\n\r\n  //function that actually adds the stock to the stock list with all its attributes (n:name, q:quantity, v:value, t:totalvalue) and with an unique key\r\n  addStock(n,q,v,t,a){\r\n    var newArray = a\r\n    if(this.state.currency === \"€\"){\r\n      v = v * this.state.currencyValue\r\n      t = v * q\r\n    }\r\n    var f = this.state.countP\r\n    newArray.push(<Stock key={this.state.countP} idStock={this.state.countP} name={n} quantity={q} value={v} totalvalue={t} selected={false} onChange={() => this.selectStock(f)}/>)\r\n    this.updateC()\r\n    this.setState({stocklist:newArray}, function() {\r\n      var c = this.state.countP\r\n      const y = c +1\r\n      this.setState({countP:y})\r\n      this.getTotal()\r\n    })\r\n  }\r\n\r\n  //funtion that add a stock to an array\r\n  //a:array, c:key, n:name, q:quantity, v:value, t:totalvalue, s:selected, that:this\r\n  //used in loops to avoid function in a loop warning\r\n  addf(a,c,n,q,v,t,s,that){\r\n    return function(){\r\n      a.push(<Stock key={c} idStock={c} name={n} quantity={q} value={v} totalvalue={t} selected={s} onChange={() => that.selectStock(c)}/>)\r\n    }\r\n  }\r\n\r\n  //function to select a stock in the stock list thanks to is idq:ID\r\n  selectStock(idq){\r\n    var func\r\n    var newArray = this.state.stocklist\r\n    var j\r\n    for (var i = 0; i < this.state.stocklist.length; i++) {\r\n      if(this.state.stocklist[i].props.idStock === idq){\r\n        //if the stock is found, a new one with the same attributes except its selected attritute is added in the stock list\r\n        func = this.addf(newArray,this.state.countP,this.state.stocklist[i].props.name,this.state.stocklist[i].props.quantity,this.state.stocklist[i].props.value,this.state.stocklist[i].props.totalvalue,!this.state.stocklist[i].props.selected,this)\r\n        j=i\r\n      }\r\n    }\r\n    func()//call the addf function after the loop\r\n    newArray.splice(j,1)//delete the old stock\r\n    this.setState({stocklist:newArray})\r\n    var c = this.state.countP\r\n    const y = c +1\r\n    this.setState({countP:y})\r\n    this.getTotal()\r\n    var pf = JSON.parse(localStorage[\"pf\"]); //get array of requests from the localStorage if it exists\r\n    for( var m = 0; m < pf.length; m++){\r\n      if(pf[m].i === this.props.id){\r\n        pf[m].c++\r\n      }\r\n    }\r\n    localStorage[\"pf\"] = JSON.stringify(pf);\r\n  }\r\n\r\n  //handle stock input name\r\n  handleChangeN(event) {\r\n    this.setState({pname: event.target.value});\r\n  }\r\n  //handle stock input quantity\r\n  handleChangeQ(event) {\r\n    this.setState({pquantity: event.target.value});\r\n  }\r\n\r\n  //remove all selected stocks of the portfolio\r\n  removeSelected(){\r\n    var funcs =[] //array of function\r\n    var newArray = [] //new stock list\r\n    var counter = this.state.countP\r\n    for (var i = 0; i < this.state.stocklist.length; i++) {\r\n      if(!this.state.stocklist[i].props.selected){\r\n        //each stock is pushed in a newArray if it is not selected\r\n        funcs.push(this.addf(newArray,counter,this.state.stocklist[i].props.name,this.state.stocklist[i].props.quantity,this.state.stocklist[i].props.value,this.state.stocklist[i].props.totalvalue,this.state.stocklist[i].props.selected,this))\r\n      }else{\r\n        var pf = JSON.parse(localStorage[\"pf\"]); //get array of pf from the localStorage if it exists\r\n        for( var m = 0; m < pf.length; m++){\r\n          if(pf[m].i === this.props.id){\r\n            for(var t = 0; t < pf[m].s.length; t++){\r\n              if(pf[m].s[t].ns === this.state.stocklist[i].props.name && pf[m].s[t].qs === this.state.stocklist[i].props.quantity){\r\n                //delete selected stocks from the corresponding pf from the localstorage\r\n                pf[m].s.splice(t,1)\r\n              }\r\n            }\r\n          }\r\n        }\r\n        localStorage[\"pf\"] = JSON.stringify(pf);\r\n      }\r\n      counter++\r\n    }\r\n    for (var j = 0; j < funcs.length; j++) {\r\n      funcs[j]() //call all the addf calls of the previous loop\r\n    }\r\n    this.updateC()\r\n    this.setState({stocklist:newArray},function(){\r\n      this.setState({countP:counter})\r\n      this.getTotal()\r\n    })\r\n  }\r\n\r\n  //refresh the current currency change\r\n  refresh(){\r\n    this.getCurrencyValue()\r\n    var newArray = []\r\n    for (var i = 0; i < this.state.stocklist.length; i++) {\r\n      //new request for each already existing stocks\r\n      this.add(this.state.stocklist[i].props.name,this.state.stocklist[i].props.quantity,newArray,false)\r\n    }\r\n  }\r\n\r\n  //update total amount of money in the portfolio by adding all stocks total values\r\n  getTotal(){\r\n    var res=0\r\n    for (var i = 0; i < this.state.stocklist.length; i++) {\r\n      res = res + this.state.stocklist[i].props.totalvalue\r\n    }\r\n    this.setState({total:res})\r\n  }\r\n\r\n  //change all stocks values and total values to euro, change current currency\r\n  changeToEuro(){\r\n    if(this.state.currency === \"$\"){\r\n      this.setState({currency:\"€\"})\r\n      var newArray = [] //new stocks list\r\n      var funcs =[] //array of functions\r\n      var counter = this.state.countP\r\n      for (var i = 0; i < this.state.stocklist.length; i++) {\r\n        var newV = this.state.stocklist[i].props.value * this.state.currencyValue //new value (calculated with currency change)\r\n        var newTotal = newV * this.state.stocklist[i].props.quantity //newTotal value\r\n        funcs.push(this.addf(newArray,counter,this.state.stocklist[i].props.name,this.state.stocklist[i].props.quantity,newV,newTotal,this.state.stocklist[i].props.selected,this))\r\n        counter++\r\n      }\r\n      for (var t = 0; t < funcs.length; t++) {\r\n        funcs[t]()\r\n      }\r\n      this.updateC()\r\n      this.setState({stocklist:newArray},function(){\r\n        this.setState({countP:counter})\r\n        this.getTotal()\r\n      })\r\n    }\r\n  }\r\n\r\n  //change all stocks values and total values to dollar, change current currency\r\n  changeToDollar(){\r\n    if(this.state.currency === \"€\"){\r\n      this.setState({currency:\"$\"})\r\n      var newArray = []\r\n      var funcs =[]\r\n      var counter = this.state.countP\r\n      for (var i = 0; i < this.state.stocklist.length; i++) {\r\n        var newV = this.state.stocklist[i].props.value / this.state.currencyValue\r\n        var newTotal = newV * this.state.stocklist[i].props.quantity\r\n        funcs.push(this.addf(newArray,counter,this.state.stocklist[i].props.name,this.state.stocklist[i].props.quantity,newV,newTotal,this.state.stocklist[i].props.selected,this))\r\n        counter++\r\n      }\r\n      for (var t = 0; t < funcs.length; t++) {\r\n        funcs[t]()\r\n      }\r\n      this.updateC()\r\n      this.setState({stocklist:newArray},function(){\r\n        this.setState({countP:counter})\r\n        this.getTotal()\r\n      })\r\n    }\r\n  }\r\n\r\n  updateC() { //update countP of the corresponding pf in the localStorage\r\n    var pf = JSON.parse(localStorage[\"pf\"]);\r\n    for( var m = 0; m < pf.length; m++){\r\n      if(pf[m].i === this.props.id){\r\n        pf[m].c ++\r\n      }\r\n    }\r\n    localStorage[\"pf\"] = JSON.stringify(pf);\r\n  }\r\n\r\n  componentWillMount(){\r\n    var pf = JSON.parse(localStorage[\"pf\"]);\r\n    for( var m = 0; m < pf.length; m++){\r\n      if(pf[m].i === this.props.id){\r\n        //set countP to the countP of the localstorage\r\n        this.setState({countP:pf[m].c})\r\n      }\r\n    }\r\n    localStorage[\"pf\"] = JSON.stringify(pf);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getCurrencyValue() //get currency change when mounting\r\n\r\n    var pf = JSON.parse(localStorage[\"pf\"]); //get array of requests from the localStorage if it exists\r\n    for( var m = 0; m < pf.length; m++){\r\n      if(pf[m].i === this.props.id){\r\n        for(var t = 0; t < pf[m].s.length; t++){\r\n          //add all the stocks from the corresponding pf from the localstorage\r\n          this.add(pf[m].s[t].ns,pf[m].s[t].qs,this.state.stocklist,false)\r\n        }\r\n      }\r\n    }\r\n    localStorage[\"pf\"] = JSON.stringify(pf);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"portfolio\">\r\n        <div>{this.props.name}</div>\r\n\r\n      {/* input text and quantity only shown when adding a new stock*/}\r\n        {this.state.show &&\r\n        <div >\r\n          <input type=\"text\" placeholder=\"Stock name\" value={this.state.pname} onChange={this.handleChangeN.bind(this)} />\r\n          <input type=\"text\" placeholder=\"Quantity\" value={this.state.pquantity} onChange={this.handleChangeQ.bind(this)} />\r\n          <button onClick={() => this.add(this.state.pname,this.state.pquantity,this.state.stocklist,true)}>Validate</button>\r\n        </div>\r\n        }\r\n\r\n        <button onClick={() => this.changeToEuro()}>Show in €</button>\r\n        <button onClick={() => this.changeToDollar()}>Show in $</button>\r\n        <button onClick={() => this.refresh()}>Refresh</button>\r\n        {/* button to delete the portfolio*/}\r\n        <button className=\"bt\" onClick={() => this.props.onClick(this.props.id)}>X</button>\r\n        {/* stock table */}\r\n        <table width = \"500\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Unit value</th>\r\n              <th>Quantity</th>\r\n              <th>Total value</th>\r\n              <th>Select</th>\r\n              <th>Graph</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.stocklist}\r\n          </tbody>\r\n        </table>\r\n        <div>Total value of {this.props.name} : {this.state.total} {this.state.currency}</div>\r\n        {this.state.stocklist.length < 50 &&\r\n        <button onClick={() => this.setState({show:true})}>Add stock</button>}\r\n        <button onClick={() => this.removeSelected()}>Remove selected</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Stock class with all its attributes\r\nclass Stock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      idStock:null,\r\n      name: null,\r\n      value: 0,\r\n      quantity: 0,\r\n      totalvalue: 0,\r\n      selected: false,\r\n      isOpen: false, //used to open a close the modal\r\n    };\r\n  }\r\n\r\n  //open the modal\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <tr >\r\n        <td align= \"center\">{this.props.name}</td>\r\n        <td align= \"center\">{this.props.value}</td>\r\n        <td align= \"center\">{this.props.quantity}</td>\r\n        <td align= \"center\">{this.props.totalvalue}</td>\r\n        {/* checkbox to select and unselect this stock */}\r\n        <td align= \"center\"><input type=\"checkbox\" checked={this.props.selected} onChange={() => this.props.onChange(this.props.idStock)}/></td>\r\n        <td align= \"center\"><button onClick={() => this.toggleModal()}>Show</button></td>\r\n        {/* Modal component */}\r\n        <Modal stockname={this.props.name} show={this.state.isOpen}\r\n          onClose={this.toggleModal}>\r\n        </Modal>\r\n      </tr>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Portfolio;\r\n","import React from 'react';\r\nimport Portfolio from './Portfolio';\r\nimport './index.css';\r\n\r\n\r\nclass Page extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      portList: [], //list of portfolios\r\n      count: 0, //local counter that ensures unique portfolio keys\r\n      value: '', //input text content\r\n      show: false, //boolean to show or not the portfolio input name\r\n    };\r\n  }\r\n\r\n  //handle portfolio input name\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  //add a portfolio with n its name and i its ID, increment count state\r\n  addPortFolio(n,i,b){\r\n    if(b){ //add pf in localstorage if needed\r\n      if (typeof localStorage[\"pf\"] === 'undefined'){ //check if the pf localStorage already exists\r\n        var a1 = []; //create new array of pf if it doesn't exist\r\n      }else{\r\n        a1 = JSON.parse(localStorage[\"pf\"]); //get array of pf from the localStorage if it exists\r\n      }\r\n      var s = [] //stocks list\r\n      var c = 0 //countP\r\n      var p = {i,n,s,c}\r\n      a1.push(p)\r\n      localStorage[\"pf\"] = JSON.stringify(a1);\r\n      localStorage[\"c\"] = this.state.count + 1\r\n    }\r\n\r\n    var newArray = this.state.portList\r\n    newArray.push(<Portfolio id={i} name={n} onClick={() => this.delPortFolio(i)}/>)\r\n    this.setState({portList:newArray})\r\n    var ct = this.state.count\r\n    const y = ct +1\r\n    this.setState({count:y})\r\n    this.setState({show:false})\r\n  }\r\n\r\n\r\n  //delete a portfolio thanks to its ID\r\n  delPortFolio(i){\r\n    //delete pf from the localstorage\r\n    var pf = JSON.parse(localStorage[\"pf\"])\r\n    for (var t = 0; t < pf.length; t++) {\r\n      if( pf[t].i === i){\r\n        pf.splice(t,1)\r\n      }\r\n    }\r\n    localStorage[\"pf\"] = JSON.stringify(pf);\r\n\r\n\r\n    var newArray = this.state.portList\r\n    for (var j = 0; j < newArray.length; j++) {\r\n      if(newArray[j].props.id === i){\r\n        newArray.splice(j,1)\r\n      }\r\n    }\r\n    this.setState({portList:newArray})\r\n  }\r\n  componentWillMount(){\r\n    if(localStorage[\"c\"]){\r\n      var co = JSON.parse(localStorage[\"c\"])\r\n      this.setState({count:co})\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(localStorage[\"pf\"] && localStorage[\"c\"]){\r\n      var pf = JSON.parse(localStorage[\"pf\"])\r\n\r\n      for (var p in pf) {\r\n        //add all already existing pf from the local storage\r\n        this.addPortFolio(pf[p].n,pf[p].i,false)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* max number of portfolio is 10 */}\r\n        {this.state.portList.length < 10 &&\r\n        <button onClick={() => this.setState({show:true}) }> Add a Portfolio </button>}\r\n        {/* input text only shown when adding a new portfolio*/}\r\n        {this.state.show &&\r\n          <div>\r\n            <input type=\"text\" placeholder=\"Portfolio name\" value={this.state.value} onChange={this.handleChange.bind(this)} />\r\n            <button onClick={() => this.addPortFolio(this.state.value,this.state.count,true)}>Validate</button>\r\n          </div>\r\n        }\r\n        {/* 4 rows of portfolios with unique keys*/}\r\n        <div className=\"portfoliopanel\">\r\n          {this.state.portList.slice(0,3).map(portfolio => <div key={portfolio.props.id}> {portfolio} </div>)}\r\n        </div>\r\n        <br/><br/>\r\n        <div className=\"portfoliopanel\">\r\n          {this.state.portList.slice(3,6).map(portfolio => <div key={portfolio.props.id}> {portfolio} </div>)}\r\n        </div>\r\n        <br/><br/>\r\n        <div className=\"portfoliopanel\">\r\n          {this.state.portList.slice(6,9).map(portfolio => <div key={portfolio.props.id}> {portfolio} </div>)}\r\n        </div>\r\n        <br/><br/>\r\n        <div className=\"portfoliopanel\">\r\n          {this.state.portList.slice(9).map(portfolio => <div key={portfolio.props.id}> {portfolio} </div>)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Page;\r\n","import React from 'react';\r\nimport Page from './Page';\r\nimport './index.css';\r\n\r\nclass App extends React.Component{\r\n  render(){\r\n    return (\r\n\r\n      <div>\r\n        <Page />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App'\r\n\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'))\r\n"],"sourceRoot":""}